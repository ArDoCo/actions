name: Build and/or Deploy Maven Projects

on:
  workflow_call:
    inputs:
        with-submodules:
          description: "Clone repository with its submodules"
          type: boolean
          required: false
          default: false
        deploy:
          description: "Switch to enable or disable the deployment process"
          type: boolean
          required: true
        runs-on:
          description: "Tag for the runner to use in the main job."
          type: string
          required: false
          default: "ubuntu-latest"
        dependencies:
          description: "A list (comma separated) of maven based repositories that have to be installed before deploying"
          type: string
          required: false
          default: ""
        install-self:
          description: "Install the project itself before deploying"
          type: boolean
          required: false
          default: false

    secrets:
      OSSRH_USER:
        required: true
      OSSRH_TOKEN:
        required: true
      GPG_KEY:
        required: true
          
jobs:
  pre_job:
    name: "Check for duplicate jobs"
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'true'
          
  build:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    name: "Build and/or Deploy"
    runs-on: ${{ inputs.runs-on }}
    steps:

    - uses: actions/checkout@v4
      with:
        submodules: ${{ inputs.with-submodules }}

    - uses: joshlong/java-version-export-github-action@v28
      id: jve   

    - name: Java with Cache
      uses: actions/setup-java@v4
      if: ${{ !inputs.deploy }}
      with:
        java-version: ${{ steps.jve.outputs.java_major_version }}
        distribution: 'temurin'
        cache: 'maven'

    - name: Java without Cache
      uses: actions/setup-java@v4
      if: ${{ inputs.deploy }}
      with:
        java-version: ${{ steps.jve.outputs.java_major_version }}
        distribution: 'temurin'

    - name: Install Dependency (Self)
      if: ${{ inputs.install-self }}
      shell: bash
      run: mvn -Pdeployment -DskipTests -Dgpg.skip -U -B install

    - name: Install Dependencies (Maven)
      if: ${{ inputs.dependencies != '' }}
      shell: bash
      run: |
        for dep in $(echo ${{ inputs.dependencies }} | tr "," "\n")
        do
          if git ls-remote --heads "$dep" "${{github.ref_name}}" | grep -q "${{github.ref_name}}"; then
            git clone --depth 1 -b ${{github.ref_name}} "$dep"
          else
            git clone --depth 1 -b main "$dep"
          fi
          cd $(basename $dep .git)
          mvn -Pdeployment -DskipTests -Dgpg.skip -U -B install
          cd ..
          rm -rf $(basename $dep .git)
        done

    - name: Maven Verify
      shell: bash
      run: mvn -U -B verify

    - name: Set maven settings.xml
      uses: whelk-io/maven-settings-xml-action@v22
      if: ${{ inputs.deploy }}
      with:
        servers: '[{ "id": "ossrh", "username": "${{ secrets.OSSRH_USER }}", "password": "${{ secrets.OSSRH_TOKEN }}" }]'

    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v6
      if: ${{ inputs.deploy }}
      with:
        gpg_private_key: ${{ secrets.GPG_KEY }}

    - name: Publish Package
      if: ${{ inputs.deploy }}
      shell: bash
      run: mvn -DskipTests -P deployment -U -B deploy
