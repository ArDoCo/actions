name: SonarCloud for Maven Projects

on:
  workflow_call:
    inputs:
        with-submodules:
          description: "Clone repository with its submodules"
          type: boolean
          required: false
          default: false
        runs-on:
          description: "Tag for the runner to use in the main job."
          type: string
          required: false
          default: "ubuntu-latest"
        dependencies:
          description: "A list (comma separated) of maven based repositories that have to be installed before deploying"
          type: string
          required: false
          default: ""
        install-self:
          description: "Install the project itself before deploying"
          type: boolean
          required: false
          default: false
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  pre_job:
    name: "Check for duplicate jobs"
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'true'

  build:
    needs: pre_job
    name: "SonarCloud Scan"
    runs-on: ${{ inputs.runs-on }}
    if: ${{ needs.pre_job.outputs.should_skip != 'true' && github.actor != 'dependabot[bot]' }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: ${{ inputs.with-submodules }}
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - uses: joshlong/java-version-export-github-action@v28
      id: jve

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ steps.jve.outputs.java_major_version }}
        cache: 'maven'

    - name: Install Dependency (Self)
      if: ${{ inputs.install-self }}
      shell: bash
      run: mvn -Pdeployment -DskipTests -Dgpg.skip -U -B install

    - name: Install Dependencies (Maven)
      if: ${{ inputs.dependencies != '' }}
      shell: bash
      run: |
        for dep in $(echo ${{ inputs.dependencies }} | tr "," "\n")
        do
          git clone --depth 1 -b ${{github.ref_name}} "$dep"
          cd $(basename $dep .git)
          mvn -Pdeployment -DskipTests -Dgpg.skip -U -B install
          cd ..
          rm -rf $(basename $dep .git)
        done

    - name: Build and Analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar --file pom.xml
